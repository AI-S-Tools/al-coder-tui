[
  {
    "name": "Claude Code",
    "cli_command": "claude",
    "install_cmd": "npm install -g @anthropic/claude-cli",
    "check_cmd": "claude --version",
    "description": "Anthropic's Claude AI coding assistant",
    "github_repo": "https://github.com/anthropics/claude-cli",
    "mcp_servers": [
      {
        "name": "filesystem",
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-filesystem"],
        "description": "File system access for Claude"
      },
      {
        "name": "github",
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-github"],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_TOKEN}"
        },
        "description": "GitHub integration for Claude"
      }
    ]
  },
  {
    "name": "Gemini CLI",
    "cli_command": "gemini",
    "install_cmd": "pip install google-generativeai-cli",
    "check_cmd": "gemini --version",
    "description": "Google's Gemini AI CLI tool",
    "github_repo": "https://github.com/google/generative-ai-cli"
  },
  {
    "name": "OpenAI Codex",
    "cli_command": "codex",
    "install_cmd": "pip install openai-codex",
    "check_cmd": "codex --version",
    "description": "OpenAI Codex code generation and completion",
    "github_repo": "https://github.com/openai/openai-codex"
  },
  {
    "name": "Qwen CLI",
    "cli_command": "qwen",
    "install_cmd": "pip install qwen-cli",
    "check_cmd": "qwen --version",
    "description": "Alibaba's Qwen AI assistant CLI",
    "github_repo": "https://github.com/alibaba/qwen-cli"
  },
  {
    "name": "GitHub Copilot CLI",
    "cli_command": "gh-copilot",
    "install_cmd": "gh extension install github/gh-copilot",
    "check_cmd": "gh copilot --version",
    "description": "GitHub Copilot command-line interface"
  },
  {
    "name": "Qodo",
    "cli_command": "qodo",
    "install_cmd": "npm install -g @qodo/cli",
    "check_cmd": "qodo --version",
    "description": "AI test generation and code quality",
    "github_repo": "https://github.com/qodo-ai/qodo-cli"
  },
  {
    "name": "LM Studio CLI",
    "cli_command": "lms",
    "install_cmd": "brew install --cask lm-studio",
    "check_cmd": "lms --version",
    "description": "Local LLM management"
  },
  {
    "name": "Sourcegraph Cody",
    "cli_command": "cody",
    "install_cmd": "brew install sourcegraph/cody/cody-cli",
    "check_cmd": "cody --version",
    "description": "Sourcegraph's AI coding assistant",
    "github_repo": "https://github.com/sourcegraph/cody-cli"
  },
  {
    "name": "Amazon Q",
    "cli_command": "q",
    "install_cmd": "brew install --cask amazon-q",
    "check_cmd": "q --version",
    "description": "Amazon's AI developer assistant"
  },
  {
    "name": "Tabnine CLI",
    "cli_command": "tabnine",
    "install_cmd": "curl -fsSL https://raw.githubusercontent.com/codota/tabnine-cli/master/install.sh | bash",
    "check_cmd": "tabnine --version",
    "description": "AI code completion",
    "github_repo": "https://github.com/codota/tabnine-cli"
  },
  {
    "name": "Pieces CLI",
    "cli_command": "pieces",
    "install_cmd": "brew install pieces-cli",
    "check_cmd": "pieces --version",
    "description": "AI-powered code snippet manager"
  },
  {
    "name": "Mentat",
    "cli_command": "mentat",
    "install_cmd": "pip install mentat",
    "check_cmd": "mentat --version",
    "description": "AI coding assistant with context awareness",
    "github_repo": "https://github.com/AbanteAI/mentat"
  },
  {
    "name": "GPT Engineer",
    "cli_command": "gpt-engineer",
    "install_cmd": "pip install gpt-engineer",
    "check_cmd": "gpt-engineer --version",
    "description": "AI engineer that builds entire codebases",
    "github_repo": "https://github.com/gpt-engineer-org/gpt-engineer"
  },
  {
    "name": "Smol Developer",
    "cli_command": "smol-dev",
    "install_cmd": "pip install smol-developer",
    "check_cmd": "smol-dev --version",
    "description": "Smallest AI developer",
    "github_repo": "https://github.com/smol-ai/developer"
  },
  {
    "name": "Auto-GPT",
    "cli_command": "autogpt",
    "install_cmd": "pip install auto-gpt",
    "check_cmd": "autogpt --version",
    "description": "Autonomous GPT-4 agent",
    "github_repo": "https://github.com/Significant-Gravitas/AutoGPT"
  },
  {
    "name": "Open Interpreter",
    "cli_command": "interpreter",
    "install_cmd": "pip install open-interpreter",
    "check_cmd": "interpreter --version",
    "description": "Natural language interface for computers",
    "github_repo": "https://github.com/OpenInterpreter/open-interpreter",
    "mcp_servers": [
      {
        "name": "code-execution",
        "command": "npx",
        "args": ["-y", "mcp-server-code-execution"],
        "description": "Safe code execution environment"
      }
    ]
  },
  {
    "name": "Sweep AI",
    "cli_command": "sweep",
    "install_cmd": "pip install sweep-ai",
    "check_cmd": "sweep --version",
    "description": "AI-powered code reviewer",
    "github_repo": "https://github.com/sweepai/sweep"
  }
]